{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar iterMap = require( '@stdlib/math-iter-tools-map' );\nvar expit = require( '@stdlib/math-base-special-expit' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively evaluates the standard logistic function.\n*\n* ## Notes\n*\n* -   If an environment supports `Symbol.iterator` **and** a provided iterator is iterable, the returned iterator is iterable.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @returns {Iterator} iterator\n*\n* @example\n* var uniform = require( '@stdlib/random-iter-uniform' );\n*\n* var iter = iterExpit( uniform( 0.0, 1.0 ) );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterExpit( iterator ) {\n\treturn iterMap( iterator, expit );\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterExpit;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively evaluates the standard logistic function.\n*\n* @module @stdlib/math-iter-special-expit\n*\n* @example\n* var uniform = require( '@stdlib/random-iter-uniform' );\n* var iterExpit = require( '@stdlib/math-iter-special-expit' );\n*\n* var iter = iterExpit( uniform( 0.0, 1.0 ) );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAU,QAAS,6BAA8B,EACjDC,EAAQ,QAAS,iCAAkC,EAgCvD,SAASC,EAAWC,EAAW,CAC9B,OAAOH,EAASG,EAAUF,CAAM,CACjC,CAKAF,EAAO,QAAUG,ICjBjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "iterMap", "expit", "iterExpit", "iterator", "main"]
}
